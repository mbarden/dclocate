1. dns query "srv" domain (list)
#print
2. parse/sort list into order we'll try "candidates" (insertion sort)
#print
3. create udp endpoint (two if ipv6)
#print events
   while poll endpoints - (100 ms delay)
   if nothing recieved, send ldap ping to next candidate

set dns server to smb server

_ldap._tcp.dc._msdcs.fqdn
dsgetdcname	


sendto
poll
recievefrom
bind (port, addr = 0)
libldap
getsockname
getpeername


if (flags & DS_PDC_REQUIRED) {
  status = ads_dns_query_pdc(mem_ctx, dns_hosts_file,
    domain_name, &dcs, &numdcs);
} else if (flags & DS_GC_SERVER_REQUIRED) {
  status = ads_dns_query_gcs(mem_ctx, dns_hosts_file,
  domain_name, site_name,
  &dcs, &numdcs);
} else if (flags & DS_KDC_REQUIRED) {
  status = ads_dns_query_kdcs(mem_ctx, dns_hosts_file,
  domain_name, site_name,
  &dcs, &numdcs);
} else if (flags & DS_DIRECTORY_SERVICE_REQUIRED) {
  status = ads_dns_query_dcs(mem_ctx, dns_hosts_file,
  domain_name, site_name,
  &dcs, &numdcs);
} else if (domain_guid) {
  guid_string = GUID_string(mem_ctx, domain_guid);
  if (!guid_string) {
    return NT_STATUS_NO_MEMORY;
  }

  status = ads_dns_query_dcs_guid(mem_ctx, dns_hosts_file,
    domain_name, guid_string, &dcs, &numdcs);
  TALLOC_FREE(guid_string);
} else {
  status = ads_dns_query_dcs(mem_ctx, dns_hosts_file,
    domain_name, site_name, &dcs, &numdcs);
}